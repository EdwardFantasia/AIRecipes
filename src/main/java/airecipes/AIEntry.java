/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package airecipes;

import com.google.gson.Gson;
import java.io.IOException;
import javax.swing.JOptionPane;
import okhttp3.Call;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 *
 * @author Edwar
 */
public class AIEntry extends javax.swing.JDialog {
    
    String aiResponse;
    
    Gson gson;
    
    /**
     * Creates new form AIEntry
     * @param parent - JFrame that created instance of this object
     * @param modal - 
     * @param gson - Gson from parent
     */
    public AIEntry(java.awt.Frame parent, boolean modal, Gson gson) {
        super(parent, modal);
        initComponents();
        
        aiResponse = "";
        
        this.gson = gson;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestCompletion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        aiRequestButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        aiKey = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Please give me one food that:");

        aiRequestButton.setText("Ask OpenAI");
        aiRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aiRequestButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("API Key:");

        aiKey.setText("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");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requestCompletion, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(aiRequestButton)
                        .addGap(198, 198, 198))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aiKey, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(requestCompletion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(aiRequestButton)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aiKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * calls the OpenAI API using the requestCompletion text
     * @param evt - An action occurs on the currently designated form aspect
     */
    private void aiRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aiRequestButtonActionPerformed
        try{
            MediaType JSON = MediaType.parse("application/json; charset=utf-8");
            String jsonInputString = "{\"model\": \"text-davinci-003\", \"prompt\": \"Please give me a food that " + requestCompletion.getText() + "\", \"max_tokens\": 7, \"temperature\": 0}";

            OkHttpClient client = new OkHttpClient();

            RequestBody body = RequestBody.create(JSON, jsonInputString);

            Request request = new Request.Builder()
                .url("https://api.openai.com/v1/completions")
                .addHeader("Authorization", "Bearer " + aiKey.getText())
                .post(body)
                .build();

            Call call = client.newCall(request);
            Response response = call.execute();
        
            AIResponse aiResp = gson.fromJson(response.body().string(), AIResponse.class);
            
            this.aiResponse = aiResp.getChoiceText(0);
            
            this.aiResponse = aiResponse.strip().toLowerCase();
            
            if(this.aiResponse.endsWith(".")){
                this.aiResponse = aiResponse.substring(0, aiResponse.length() - 1);
            }
                
            this.setVisible(false);
        }catch(IOException io){
            JOptionPane.showMessageDialog(null, "There was an error when trying to reach the OpenAI database.", "Reach Error", JOptionPane.ERROR_MESSAGE);}
        catch(NullPointerException npe){
            JOptionPane.showMessageDialog(null, "There was an error when trying to retrieve the data, the API key could be invalid, please try again.", "Nothing Returned", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_aiRequestButtonActionPerformed

    /**
     * Returns the aiResponse field
     * @return aiResponse
     */
    public String getResponse(){
        return aiResponse;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AIEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AIEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AIEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AIEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aiKey;
    private javax.swing.JButton aiRequestButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField requestCompletion;
    // End of variables declaration//GEN-END:variables
}
