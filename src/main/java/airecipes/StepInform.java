/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package airecipes;

import java.awt.Image;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author Edwar
 */
public class StepInform extends javax.swing.JDialog {
    
    private ArrayList<Ingredients> stepIngreds;
    
    private ArrayList<Equipment> stepEquip;
    
    private int stepNum;
    
    private DefaultListModel ingredsDLM;
    
    private DefaultListModel equipDLM;

    /**
     * Creates new form StepInform
     */
    public StepInform(java.awt.Frame parent, boolean modal, ArrayList<Ingredients> stepIngreds, ArrayList<Equipment> stepEquip, int stepNum) {
        super(parent, modal);
        initComponents();
        
        this.stepIngreds = stepIngreds;
        
        this.stepEquip = stepEquip;
        
        this.stepNum = stepNum;
        
        ingredsDLM = new DefaultListModel();
        
        for(int i = 0; i < stepIngreds.size(); i++){
            ingredsDLM.add(i, stepIngreds.get(i).getIngredientName());
        }
        
        ingredsJList.setModel(ingredsDLM);
        
        equipDLM = new DefaultListModel();
        
        for(int i = 0; i < stepEquip.size(); i++){
            equipDLM.add(i, stepEquip.get(i).getEquipName());
        }
        
        equipJList.setModel(equipDLM);
        
        this.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        equipJList = new javax.swing.JList<>();
        equipIcon = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ingredsJList = new javax.swing.JList<>();
        ingredsIcon = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        equipJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        equipJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                equipJListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(equipJList);

        ingredsJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ingredsJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ingredsJListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ingredsJList);

        jLabel3.setText("Ingredients");

        jLabel4.setText("Equipment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(equipIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(ingredsIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(equipIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ingredsIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * changes equipIcon to currently selected equipment item
     * @param evt - event that occurs on JFrame JList
     */
    private void equipJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_equipJListValueChanged
        changePhoto(equipIcon, stepEquip.get(equipJList.getSelectedIndex()).getEquipImage());
    }//GEN-LAST:event_equipJListValueChanged

    /**
     * changes ingredsIcon to currently selected equipment item
     * @param evt - event that occurs on JFrame JList
     */
    private void ingredsJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ingredsJListValueChanged
        changePhoto(ingredsIcon, stepIngreds.get(ingredsJList.getSelectedIndex()).getIngredientImage());
    }//GEN-LAST:event_ingredsJListValueChanged

    /**
     * changes photo using to the label using the imgLink
     * @param label - label to display picture on
     * @param imgLink - link of image to display
     */
    private void changePhoto(JLabel label, String imgLink){
        try {
            URL imgUrl;
            if(label == this.equipIcon){
                imgUrl = new URL("https://spoonacular.com/cdn/equipment_500x500/" + imgLink);
            }
            else{
                imgUrl = new URL("https://spoonacular.com/cdn/ingredients_500x500/" + imgLink);
            }
            Image image = ImageIO.read(imgUrl);
            image = image.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon labelIcon = new ImageIcon(image);
            label.setIcon(labelIcon);
        } catch (IOException e){
            setPlaceholder(label);
        } catch (IndexOutOfBoundsException e){
            setPlaceholder(label);
        }
        catch(NullPointerException e){
            setPlaceholder(label);
        }
    }
    
    /**
     * sets the pictureHolder icon to the placeholder image
     * @param pictureHolder - label to set placeholder to
     */
    public void setPlaceholder(JLabel pictureHolder){
        ImageIcon placeholder = new ImageIcon("src/main/res/placeholder.jpg");
        Image image = placeholder.getImage();
        placeholder = new ImageIcon(image.getScaledInstance(pictureHolder.getWidth(), pictureHolder.getHeight(), Image.SCALE_SMOOTH));
        pictureHolder.setIcon(placeholder);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StepInform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StepInform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StepInform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StepInform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel equipIcon;
    private javax.swing.JList<String> equipJList;
    private javax.swing.JLabel ingredsIcon;
    private javax.swing.JList<String> ingredsJList;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
